# This is a sample configuration file for running single-binary Nebula locally against
# a sandbox.
admin:
  endpoint: localhost:8089
  insecure: true

catalog-cache:
  endpoint: localhost:8081
  insecure: true
  type: datacatalog

cluster_resources:
  standaloneDeployment: false
  templatePath: $HOME/.nebula/cluster-resource-templates

logger:
  show-source: true
  level: 6

propeller:
  create-nebulaworkflow-crd: true
  kube-config: $HOME/.nebula/sandbox/kubeconfig
  rawoutput-prefix: s3://my-s3-bucket/data

server:
  kube-config: $HOME/.nebula/sandbox/kubeconfig

webhook:
  certDir: $HOME/.nebula/webhook-certs
  localCert: true
  secretName: nebula-sandbox-webhook-secret
  serviceName: nebula-sandbox-local
  servicePort: 9443

tasks:
  task-plugins:
    enabled-plugins:
      - container
      - sidecar
      - K8S-ARRAY
    default-for-task-types:
      - container: container
      - container_array: K8S-ARRAY

plugins:
  logs:
    kubernetes-enabled: true
    kubernetes-template-uri: http://localhost:30080/kubernetes-dashboard/#/log/{{.namespace }}/{{ .podName }}/pod?namespace={{ .namespace }}
    cloudwatch-enabled: false
    stackdriver-enabled: false
  k8s:
    default-env-vars:
    - NEBULA_AWS_ENDPOINT: http://nebula-sandbox-minio.nebula:9000
    - NEBULA_AWS_ACCESS_KEY_ID: minio
    - NEBULA_AWS_SECRET_ACCESS_KEY: miniostorage
  k8s-array:
    logs:
      config:
        kubernetes-enabled: true
        kubernetes-template-uri: http://localhost:30080/kubernetes-dashboard/#/log/{{.namespace }}/{{ .podName }}/pod?namespace={{ .namespace }}
        cloudwatch-enabled: false
        stackdriver-enabled: false

database:
  postgres:
    username: postgres
    password: postgres
    host: 127.0.0.1
    port: 30001
    dbname: nebula
    options: "sslmode=disable"

storage:
  type: stow
  stow:
    kind: s3
    config:
      region: us-east-1
      disable_ssl: true
      v2_signing: true
      endpoint: http://localhost:30002
      auth_type: accesskey
      access_key_id: minio
      secret_key: miniostorage
  container: my-s3-bucket
