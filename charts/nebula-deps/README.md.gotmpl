{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}{{ template "chart.appVersionBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.maintainersSection" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

### SANDBOX INSTALLATION:
- [Install helm 3](https://helm.sh/docs/intro/install/)
- Install Nebula dependency:

```bash
helm repo add nebula https://nebulaclouds.github.io/nebula
helm install -n nebula --create-namespace nebula nebula/nebula-deps
```

Customize your installation by changing settings in a new file `values-sandbox.yaml`.
You can use the helm diff plugin to review any value changes you've made to your values:

```bash
helm plugin install https://github.com/databus23/helm-diff
helm diff upgrade -f values-sandbox.yaml nebula .
```

Then apply your changes:
```bash
helm upgrade -f values.yaml nebula .
```

#### Alternative: Generate raw kubernetes yaml with helm template
- `helm template --name-template=nebula-deps . -n nebula   > nebula_generated_sandbox.yaml`
- Deploy the manifest `kubectl apply -f nebula_generated_sandbox.yaml`


- When all pods are running - run end2end tests: `kubectl apply -f ../end2end/tests/endtoend.yaml`
- If running on minikube, get nebula host using `minikube service contour -n heptio-contour --url`. And then visit `http://<HOST>/console`

### CONFIGURATION NOTES:
- The docker images, their tags and other default parameters are configured in `values.yaml` file.
- Each Nebula installation type should have separate `values-*.yaml` file: for sandbox, EKS and etc. The configuration in `values.yaml` and the chosen config `values-*.yaml` are merged when generating the deployment manifest.

{{ template "chart.valuesSection" . }}
