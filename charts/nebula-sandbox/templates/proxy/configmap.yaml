{{- if .Values.sandbox.proxy.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "nebula-sandbox.proxyConfigMapName" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "nebula-sandbox.labels" . | nindent 4 }}
data:
  envoy.yaml: |
    admin:
        access_log_path: /dev/stdout
    static_resources:
        listeners:
            - address:
                  socket_address:
                      address: 0.0.0.0
                      port_value: 8000
              filter_chains:
                  - filters:
                        - name: envoy.filters.network.http_connection_manager
                          typed_config:
                              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                              stat_prefix: ingress_http
                              codec_type: AUTO
                              upgrade_configs:
                                  - upgrade_type: websocket
                              route_config:
                                  name: local_route
                                  virtual_hosts:
                                      - name: backend
                                        domains:
                                            - "*"
                                        routes:
                                            {{- if or ( index .Values "nebula-binary" "enabled" ) .Values.sandbox.dev }}
                                            - match:
                                                  path: "/"
                                              redirect:
                                                  path_redirect: "/console/"
                                            - match:
                                                  prefix: "/.well-known"
                                              route:
                                                  cluster: nebula
                                            - match:
                                                  prefix: "/__webpack_hmr"
                                              route:
                                                  cluster: nebula
                                            - match:
                                                  prefix: "/api"
                                              route:
                                                  cluster: nebula
                                            - match:
                                                  prefix: "/callback"
                                              route:
                                                  cluster: nebula
                                            - match:
                                                  prefix: "/config"
                                              route:
                                                  cluster: nebula
                                            - match:
                                                  prefix: "/console"
                                              route:
                                                  cluster: nebula
                                            - match:
                                                  prefix: "/healthcheck"
                                              route:
                                                  cluster: nebula
                                            - match:
                                                  prefix: "/login"
                                              route:
                                                  cluster: nebula
                                            - match:
                                                  prefix: "/logout"
                                              route:
                                                  cluster: nebula
                                            - match:
                                                  prefix: "/me"
                                              route:
                                                  cluster: nebula
                                            - match:
                                                  prefix: "/oauth2"
                                              route:
                                                  cluster: nebula
                                            - match:
                                                  prefix: "/v1"
                                              route:
                                                  cluster: nebula
                                            - match:
                                                  prefix: "/nebulaidl.service.AdminService"
                                              route:
                                                  cluster: nebula_grpc
                                            - match:
                                                  prefix: "/nebulaidl.service.AuthMetadataService"
                                              route:
                                                  cluster: nebula_grpc
                                            - match:
                                                  prefix: "/nebulaidl.service.DataProxyService"
                                              route:
                                                  cluster: nebula_grpc
                                            - match:
                                                  prefix: "/nebulaidl.service.IdentityService"
                                              route:
                                                  cluster: nebula_grpc
                                            - match:
                                                  prefix: "/grpc.health.v1.Health"
                                              route:
                                                  cluster: nebula_grpc
                                            - match:
                                                  prefix: "/nebulaidl.service.SignalService"
                                              route:
                                                  cluster: nebula_grpc
                                            {{- end }}
                                            {{- if index .Values "kubernetes-dashboard" "enabled" }}
                                            - match:
                                                  path: "/kubernetes-dashboard"
                                              redirect:
                                                  path_redirect: "/kubernetes-dashboard/"
                                            - match:
                                                  prefix: "/kubernetes-dashboard/"
                                              route:
                                                  cluster: kubernetes-dashboard
                                                  prefix_rewrite: /
                                            {{- end }}
                                            {{- if .Values.minio.enabled }}
                                            - match:
                                                  path: "/minio"
                                              redirect:
                                                  path_redirect: "/minio/"
                                            - match:
                                                  prefix: "/minio/"
                                              route:
                                                  cluster: minio
                                                  prefix_rewrite: /
                                            {{- end }}
                              http_filters:
                                  - name: envoy.filters.http.router
                                    typed_config:
                                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        clusters:
            {{- if or ( index .Values "nebula-binary" "enabled" ) .Values.sandbox.dev }}
            - name: nebula
              connect_timeout: 0.25s
              type: STRICT_DNS
              lb_policy: ROUND_ROBIN
              load_assignment:
                  cluster_name: nebula
                  endpoints:
                      - lb_endpoints:
                            - endpoint:
                                  address:
                                      socket_address:
                                          {{- if index .Values "nebula-binary" "enabled" }}
                                          address: {{ include "nebula-binary.service.http.name" .}}
                                          {{- else }}
                                          address: {{ include "nebula-sandbox.localHeadlessService" . }}
                                          {{- end }}
                                          port_value: 8088
            - name: nebula_grpc
              connect_timeout: 0.25s
              type: STRICT_DNS
              lb_policy: ROUND_ROBIN
              http2_protocol_options: {}
              load_assignment:
                  cluster_name: nebula_grpc
                  endpoints:
                      - lb_endpoints:
                            - endpoint:
                                  address:
                                      socket_address:
                                          {{- if index .Values "nebula-binary" "enabled" }}
                                          address: {{ include "nebula-binary.service.grpc.name" .}}
                                          {{- else }}
                                          address: {{ include "nebula-sandbox.localHeadlessService" . }}
                                          {{- end }}
                                          port_value: 8089
            {{- end }}
            {{- if index .Values "kubernetes-dashboard" "enabled" }}
            - name: kubernetes-dashboard
              connect_timeout: 0.25s
              type: STRICT_DNS
              lb_policy: ROUND_ROBIN
              load_assignment:
                  cluster_name: kubernetes-dashboard
                  endpoints:
                      - lb_endpoints:
                            - endpoint:
                                  address:
                                      socket_address:
                                          address: {{ .Release.Name }}-kubernetes-dashboard
                                          port_value: 80
            {{- end }}
            {{- if .Values.minio.enabled }}
            - name: minio
              connect_timeout: 0.25s
              type: STRICT_DNS
              lb_policy: ROUND_ROBIN
              load_assignment:
                  cluster_name: minio
                  endpoints:
                      - lb_endpoints:
                            - endpoint:
                                  address:
                                      socket_address:
                                          address: {{ .Release.Name }}-minio
                                          port_value: 9001
            {{- end }}

{{- end }}
