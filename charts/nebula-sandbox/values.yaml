docker-registry:
  enabled: true
  image:
    tag: sandbox
    pullPolicy: Never
  persistence:
    enabled: false
  service:
    type: NodePort
    nodePort: 30000

nebula-binary:
  nameOverride: nebula-sandbox
  enabled: true
  configuration:
    database:
      host: '{{ printf "%s-postgresql" .Release.Name | trunc 63 | trimSuffix "-" }}'
      password: postgres
    storage:
      metadataContainer: my-s3-bucket
      userDataContainer: my-s3-bucket
      provider: s3
      providerConfig:
        s3:
          disableSSL: true
          v2Signing: true
          endpoint: http://{{ printf "%s-minio" .Release.Name | trunc 63 | trimSuffix "-" }}.{{ .Release.Namespace }}:9000
          authType: accesskey
          accessKey: minio
          secretKey: miniostorage
    logging:
      level: 6
      plugins:
        kubernetes:
          enabled: true
          templateUri: |-
            http://localhost:30080/kubernetes-dashboard/#/log/{{.namespace }}/{{ .podName }}/pod?namespace={{ .namespace }}
    inline:
      task_resources:
        defaults:
          cpu: 500m
          ephemeralStorage: 0
          gpu: 0
          memory: 1Gi
        limits:
          cpu: 0
          ephemeralStorage: 0
          gpu: 0
          memory: 0
      storage:
        signedURL:
          stowConfigOverride:
            endpoint: http://localhost:30002
      plugins:
        k8s:
          default-env-vars:
            - NEBULA_AWS_ENDPOINT: http://{{ printf "%s-minio" .Release.Name | trunc 63 | trimSuffix "-" }}.{{ .Release.Namespace }}:9000
            - NEBULA_AWS_ACCESS_KEY_ID: minio
            - NEBULA_AWS_SECRET_ACCESS_KEY: miniostorage
    inlineConfigMap: '{{ include "nebula-sandbox.configuration.inlineConfigMap" . }}'
  clusterResourceTemplates:
    inlineConfigMap: '{{ include "nebula-sandbox.clusterResourceTemplates.inlineConfigMap" . }}'
  deployment:
    image:
      repository: nebula-binary
      tag: sandbox
      pullPolicy: Never
    waitForDB:
      image:
        repository: bitnami/postgresql
        tag: sandbox
        pullPolicy: Never
  rbac:
    # This is strictly NOT RECOMMENDED in production clusters, and is only for use
    # within local Nebula sandboxes.
    # When using cluster resource templates to create additional namespaced roles,
    # Nebula is required to have a superset of those permissions. To simplify
    # experimenting with new backend plugins that require additional roles be created
    # with cluster resource templates (e.g. Spark), we add the following:
    extraRules:
      - apiGroups:
        - '*'
        resources:
        - '*'
        verbs:
        - '*'

kubernetes-dashboard:
  enabled: true
  image:
    tag: sandbox
    pullPolicy: Never
  extraArgs:
    - --enable-insecure-login
    - --enable-skip-login
  protocolHttp: true
  service:
    externalPort: 80
  rbac:
    create: true
    clusterRoleMetrics: false
    clusterReadOnlyRole: true

minio:
  enabled: true
  image:
    tag: sandbox
    pullPolicy: Never
  auth:
    rootUser: minio
    rootPassword: miniostorage
  defaultBuckets: my-s3-bucket
  extraEnvVars:
    - name: MINIO_BROWSER_REDIRECT_URL
      value: http://localhost:30080/minio
  service:
    type: NodePort
    nodePorts:
      api: 30002
  persistence:
    enabled: true
    existingClaim: '{{ include "nebula-sandbox.persistence.minioVolumeName" . }}'
  volumePermissions:
    enabled: true
    image:
      tag: sandbox
      pullPolicy: Never

postgresql:
  enabled: true
  image:
    tag: sandbox
    pullPolicy: Never
  auth:
    postgresPassword: postgres
  shmVolume:
    enabled: false
  primary:
    service:
      type: NodePort
      nodePorts:
        postgresql: 30001
    persistence:
      enabled: true
      existingClaim: '{{ include "nebula-sandbox.persistence.dbVolumeName" . }}'
  volumePermissions:
    enabled: true
    image:
      tag: sandbox
      pullPolicy: Never

sandbox:
  # dev Routes requests to an instance of Nebula running locally on a developer's
  # development environment. This is only usable if the nebula-binary chart is disabled.
  dev: false
  buildkit:
    enabled: true
    image:
      repository: moby/buildkit
      tag: sandbox
      pullPolicy: Never
  proxy:
    enabled: true
    image:
      repository: envoyproxy/envoy
      tag: sandbox
      pullPolicy: Never
