{{- if not (include "nebula-binary.configuration.externalConfiguration" .) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "nebula-binary.configuration.configSecretName" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "nebula-binary.labels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- tpl ( .Values.commonLabels | toYaml ) . | nindent 4 }}
    {{- end }}
    {{- if .Values.configuration.labels }}
    {{- tpl ( .Values.configuration.labels | toYaml ) . | nindent 4 }}
    {{- end }}
  annotations:
    {{- if .Values.commonAnnotations }}
    {{- tpl ( .Values.commonAnnotations | toYaml ) . | nindent 4 }}
    {{- end }}
    {{- if .Values.configuration.annotations }}
    {{- tpl ( .Values.configuration.annotations | toYaml ) . | nindent 4 }}
    {{- end }}
type: Opaque
stringData:
  {{- if .Values.configuration.database.password }}
  012-database-secrets.yaml: |
    database:
      postgres:
        password: {{ .Values.configuration.database.password | quote }}
  {{- end }}
  {{- if eq "s3" .Values.configuration.storage.provider }}
  {{- if eq "accesskey" .Values.configuration.storage.providerConfig.s3.authType }}
  013-storage-secrets.yaml: |
    storage:
      stow:
        config:
          access_key_id: {{ required "Access key required for S3 storage provider" .Values.configuration.storage.providerConfig.s3.accessKey | quote }}
          secret_key: {{ required "Secret key required for S3 storage provider" .Values.configuration.storage.providerConfig.s3.secretKey | quote }}
  {{- end }}
  {{- end }}
  {{- if .Values.configuration.auth.enabled }}
  {{- if .Values.configuration.auth.enableAuthServer }}
  {{- if .Values.configuration.auth.internal.clientSecretHash }}
  014-auth-secrets.yaml: |
    auth:
      appAuth:
        selfAuthServer:
          staticClients:
            nebulapropeller:
              client_secret: {{ .Values.configuration.auth.internal.clientSecretHash | quote }}
  {{- end }}
  {{- end }}
  {{- end }}
{{- end }}
